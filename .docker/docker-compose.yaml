services:
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-openwebui}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  bedrock-gateway:
    build:
      context: ..
      dockerfile: .docker/Dockerfile
    environment:
      - AWS_REGION=${AWS_REGION:-us-east-1}
      - PORT=8080
      - API_ROUTE_PREFIX=/api/v1
      - DEFAULT_MODEL=${DEFAULT_MODEL:-anthropic.claude-3-sonnet-20240229-v1:0}
      - DEFAULT_EMBEDDING_MODEL=${DEFAULT_EMBEDDING_MODEL:-cohere.embed-multilingual-v3}
      - ENABLE_CROSS_REGION_INFERENCE=${ENABLE_CROSS_REGION_INFERENCE:-false}
      - DEBUG=${DEBUG:-false}
    volumes:
      - ~/.aws:/root/.aws:ro  # Mount AWS config directory as read-only
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/v1/models"]
      interval: 30s
      timeout: 10s
      retries: 3

  openwebui:
    image: ghcr.io/open-webui/open-webui:main
    environment:
      - OPENAI_API_BASE=http://bedrock-gateway:8080/api/v1
      - OPENAI_API_KEY=dummy # Not used but required
      - DEFAULT_MODEL=${DEFAULT_MODEL:-anthropic.claude-3-sonnet-20240229-v1:0}
      - ENDPOINTS_TYPE=openai
      - HOST=0.0.0.0
      - PORT=3000
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-openwebui}
    ports:
      - "3000:3000"
    depends_on:
      bedrock-gateway:
        condition: service_healthy
      postgres:
        condition: service_healthy
